// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace SampleApp.UITest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Initial sample of UI auotmation via VS
        /// </summary>
        public void PersonEntrySample()
        {
            #region Variable Declarations
            WinEdit uINameEdit = this.UIDebugWindow.UIItemWindow.UISampleAppexeListItem.UINameEdit;
            WpfEdit uIItemEdit = this.UIPersonEntryWindow.UIPersonalDetailsGroup.UIGivenNameText.UIItemEdit;
            WinList uIItemsViewList = this.UIDebugWindow.UIShellViewWindow.UIShellViewClient.UIItemsViewList;
            WpfButton uISaveButton = this.UIPersonEntryWindow.UISaveButton;
            #endregion

            // Double-Click 'Name' text box
            Mouse.DoubleClick(uINameEdit, new Point(40, 10));

            // Click first text box next to 'Given Name' label
            Mouse.Click(uIItemEdit, new Point(143, 16));

            // Type 'Lee{Tab}{Tab}Campe{Back}bell{Tab}' in 'Items View' list box
            Keyboard.SendKeys(uIItemsViewList, this.PersonEntrySampleParams.UIItemsViewListSendKeys, ModifierKeys.None);

            // Click 'Save' button
            Mouse.Click(uISaveButton, new Point(70, 16));
        }
        
        #region Properties
        public virtual PersonEntrySampleParams PersonEntrySampleParams
        {
            get
            {
                if ((this.mPersonEntrySampleParams == null))
                {
                    this.mPersonEntrySampleParams = new PersonEntrySampleParams();
                }
                return this.mPersonEntrySampleParams;
            }
        }
        
        public UIDebugWindow UIDebugWindow
        {
            get
            {
                if ((this.mUIDebugWindow == null))
                {
                    this.mUIDebugWindow = new UIDebugWindow();
                }
                return this.mUIDebugWindow;
            }
        }
        
        public UIPersonEntryWindow UIPersonEntryWindow
        {
            get
            {
                if ((this.mUIPersonEntryWindow == null))
                {
                    this.mUIPersonEntryWindow = new UIPersonEntryWindow();
                }
                return this.mUIPersonEntryWindow;
            }
        }
        #endregion
        
        #region Fields
        private PersonEntrySampleParams mPersonEntrySampleParams;
        
        private UIDebugWindow mUIDebugWindow;
        
        private UIPersonEntryWindow mUIPersonEntryWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'PersonEntrySample'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class PersonEntrySampleParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Lee{Tab}{Tab}Campe{Back}bell{Tab}' in 'Items View' list box
        /// </summary>
        public string UIItemsViewListSendKeys = "Lee{Tab}{Tab}Campe{Back}bell{Tab}";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIDebugWindow : WinWindow
    {
        
        public UIDebugWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Debug";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CabinetWClass";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIShellViewWindow UIShellViewWindow
        {
            get
            {
                if ((this.mUIShellViewWindow == null))
                {
                    this.mUIShellViewWindow = new UIShellViewWindow(this);
                }
                return this.mUIShellViewWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        
        private UIShellViewWindow mUIShellViewWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Items View";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UISampleAppexeListItem UISampleAppexeListItem
        {
            get
            {
                if ((this.mUISampleAppexeListItem == null))
                {
                    this.mUISampleAppexeListItem = new UISampleAppexeListItem(this);
                }
                return this.mUISampleAppexeListItem;
            }
        }
        #endregion
        
        #region Fields
        private UISampleAppexeListItem mUISampleAppexeListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UISampleAppexeListItem : WinListItem
    {
        
        public UISampleAppexeListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "SampleApp.exe";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.WindowTitles.Add("Debug");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIShellViewWindow : WinWindow
    {
        
        public UIShellViewWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "ShellView";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "SHELLDLL_DefView";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UIShellViewClient UIShellViewClient
        {
            get
            {
                if ((this.mUIShellViewClient == null))
                {
                    this.mUIShellViewClient = new UIShellViewClient(this);
                }
                return this.mUIShellViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIShellViewClient mUIShellViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIShellViewClient : WinClient
    {
        
        public UIShellViewClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Shell Folder View";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public WinList UIItemsViewList
        {
            get
            {
                if ((this.mUIItemsViewList == null))
                {
                    this.mUIItemsViewList = new WinList(this);
                    #region Search Criteria
                    this.mUIItemsViewList.SearchProperties[WinList.PropertyNames.Name] = "Items View";
                    this.mUIItemsViewList.WindowTitles.Add("Debug");
                    #endregion
                }
                return this.mUIItemsViewList;
            }
        }
        #endregion
        
        #region Fields
        private WinList mUIItemsViewList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIPersonEntryWindow : WpfWindow
    {
        
        public UIPersonEntryWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Person Entry";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Person Entry");
            #endregion
        }
        
        #region Properties
        public UIPersonalDetailsGroup UIPersonalDetailsGroup
        {
            get
            {
                if ((this.mUIPersonalDetailsGroup == null))
                {
                    this.mUIPersonalDetailsGroup = new UIPersonalDetailsGroup(this);
                }
                return this.mUIPersonalDetailsGroup;
            }
        }
        
        public WpfButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[WpfButton.PropertyNames.Name] = "Save";
                    this.mUISaveButton.WindowTitles.Add("Person Entry");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        #endregion
        
        #region Fields
        private UIPersonalDetailsGroup mUIPersonalDetailsGroup;
        
        private WpfButton mUISaveButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIPersonalDetailsGroup : WpfGroup
    {
        
        public UIPersonalDetailsGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.Name] = "Personal Details";
            this.WindowTitles.Add("Person Entry");
            #endregion
        }
        
        #region Properties
        public UIGivenNameText UIGivenNameText
        {
            get
            {
                if ((this.mUIGivenNameText == null))
                {
                    this.mUIGivenNameText = new UIGivenNameText(this);
                }
                return this.mUIGivenNameText;
            }
        }
        #endregion
        
        #region Fields
        private UIGivenNameText mUIGivenNameText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIGivenNameText : WpfText
    {
        
        public UIGivenNameText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = "Given Name";
            this.WindowTitles.Add("Person Entry");
            #endregion
        }
        
        #region Properties
        public WpfEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemEdit.WindowTitles.Add("Person Entry");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIItemEdit;
        #endregion
    }
}
